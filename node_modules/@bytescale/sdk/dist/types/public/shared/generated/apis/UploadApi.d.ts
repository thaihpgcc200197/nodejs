/**
 * @bytescale/api
 * Bytescale API
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: hello@bytescale.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from "../runtime";
import type { BasicUploadResponse, BeginMultipartUploadRequest, BeginMultipartUploadResponse, CompleteMultipartUploadResponse, CompleteUploadPartRequest, UploadFromUrlRequest, UploadPart, UploadPartList } from "../models";
export interface BeginMultipartUploadOperationParams {
    accountId: string;
    /**
     *
     */
    beginMultipartUploadRequest: BeginMultipartUploadRequest;
}
export interface CompleteUploadPartOperationParams {
    accountId: string;
    uploadId: string;
    uploadPartIndex: number;
    completeUploadPartRequest: CompleteUploadPartRequest;
}
export interface GetUploadPartParams {
    accountId: string;
    uploadId: string;
    uploadPartIndex: number;
}
export interface ListUploadPartsParams {
    accountId: string;
    uploadId: string;
}
export interface UploadFromUrlOperationParams {
    accountId: string;
    /**
     *
     */
    uploadFromUrlRequest: UploadFromUrlRequest;
}
export declare class UploadApi extends runtime.BaseAPI {
    /**
     * Begins a new multipart file upload process.
     */
    beginMultipartUpload(params: BeginMultipartUploadOperationParams): Promise<BeginMultipartUploadResponse>;
    /**
     * Marks an upload part as uploaded.  You must call this endpoint after you have successfully issued a `PUT` request to the `uploadUrl` on the corresponding UploadPart.
     */
    completeUploadPart(params: CompleteUploadPartOperationParams): Promise<CompleteMultipartUploadResponse>;
    /**
     * Gets a remaining upload part for a multipart file upload.
     */
    getUploadPart(params: GetUploadPartParams): Promise<UploadPart>;
    /**
     * Lists the remaining upload parts for a multipart file upload.  An empty array is returned when the upload is complete.
     */
    listUploadParts(params: ListUploadPartsParams): Promise<UploadPartList>;
    /**
     * Upload from a URL with a single HTTP request:
     */
    uploadFromUrl(params: UploadFromUrlOperationParams): Promise<BasicUploadResponse>;
}
