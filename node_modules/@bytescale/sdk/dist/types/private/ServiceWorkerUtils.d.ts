import { ServiceWorkerConfig, ServiceWorkerConfigInitialized } from "./model/ServiceWorkerConfig";
export declare class ServiceWorkerUtils<TMessage> {
    canUseServiceWorkers(): boolean;
    sendMessage(message: TMessage, config: ServiceWorkerConfig, serviceWorkerScriptFieldName: string): Promise<ServiceWorkerConfigInitialized>;
    private ensureActiveServiceWorkerExists;
    /**
     * Idempotent.
     *
     * Only returns once the service worker has been activated.
     *
     * We don't need to unregister it: we just need to clear the config when auth ends.
     */
    private registerServiceWorker;
    private waitForActiveServiceWorker;
    private getActiveServiceWorker;
    /**
     * Existing active Service Workers will not receive 'fetch' events in sessions that start with a hard reload, so
     * we must unregister them and register a new one. (See: https://github.com/mswjs/msw/issues/98#issuecomment-612118211)
     */
    private unregisterOnHardReload;
    private getActiveRegistrations;
}
